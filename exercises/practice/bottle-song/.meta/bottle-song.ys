!yamlscript/v0

defn recite(start-bottles take-down):
  last-num =: (start-bottles - take-down) + 1
  drop-last:
    # XXX reduce
    reduce+ [] (start-bottles .. last-num):
      fn(acc num):
        concat acc: verse(num)

defn- verse(num):
  # XXX use _
  conj:
    lines: |
      $(bottles(num).uc1()) hanging on the wall,
      $(bottles(num).uc1()) hanging on the wall,
      And if one green bottle should accidentally fall,
      There'll be $bottles(num - 1) hanging on the wall.
    =>: ''

dict =:
  zipmap (0 .. 10):
    qw(no one two three four five six seven eight nine ten)

defn- bottles(num):
  case num %:
    0 : 'no green bottles'
    1 : 'one green bottle'
    =>: "$(dict.get(num)) green bottles"
