!yamlscript/v0

defn rebase(input-base digits output-base):
  =>::
    Converts a sequence of digits given in input-base into a sequence of digits
    in the desired output-base.

  cond:
    input-base < 2:
      die: 'input base must be >= 2'
    output-base < 2:
      die: 'output base must be >= 2'
    ? digits.some(neg?) ||
      digits.some(partial(<= input-base))
    : die: 'all digits must satisfy 0 <= d < input base'

    digits.every?(zero?):: [0]
    digits.empty?():: [0]
    =>:
      ->> digits:
        digits-to-decimal: input-base
        decimal-to-digits: output-base

defn digits-to-decimal(input-base digits):
  =>:: Converts a sequence of digits given in input-base into decimal format.

  loop sum 0, [num & nums] digits:
    if num:
      recur: ((sum * input-base) + num) nums
      =>: sum

defn decimal-to-digits(output-base number):
  =>::
    Converts a decimal number into a sequence of digits in the desired output
    base.

  loop digits nil, num number:
    if zero?(num):
      =>: digits
      recur:
        conj: digits (num % output-base)
        quot: num output-base
