!yamlscript/v0

defn recite(start-bottles take-down):
  last-num =: (start-bottles - take-down) + 1
  drop-last:
    reduce:
      fn [acc num]:
        concat acc: verse(num)
      +[] |: (start-bottles .. last-num)

defn verse(num):
  lines =:
    str/split-lines: |
      $(bottles(num).capitalize()) hanging on the wall,
      $(bottles(num).capitalize()) hanging on the wall,
      And if one green bottle should accidentally fall,
      There'll be $bottles(num - 1) hanging on the wall.
  =>: lines + ['']

dict =: zipmap(
  (0 .. 10)
  qw(no one two three four five six seven eight nine ten))

defn bottles(num):
  case num %:
    0: 'no green bottles'
    1: 'one green bottle'
    =>: "$(dict.get(num)) green bottles"
